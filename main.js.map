{"version":3,"file":"main.js","mappings":"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","sources":["webpack://top-tasks/./src/js/allTasks.js","webpack://top-tasks/./src/js/Task.js","webpack://top-tasks/./src/js/filterWidget.js","webpack://top-tasks/./src/js/TasksList.js","webpack://top-tasks/./src/js/savedTasks.js","webpack://top-tasks/./src/js/app.js","webpack://top-tasks/./src/index.js"],"sourcesContent":["const tasks = [];\nexport default tasks;\n","export default class Task {\n  constructor(id, name, pinned) {\n    this.id = id;\n    this.name = name;\n    this.pinned = pinned;\n  }\n}\n","import tasks from './allTasks';\nimport Task from './Task';\n\nexport default class FilterWidget {\n  constructor(container, savedTasks, showList, filterTasks) {\n    if (typeof container === 'string') {\n      this.container = document.querySelector(container);\n    }\n    this.savedTasks = savedTasks;\n    this.showList = showList;\n    this.filterTasks = filterTasks;\n    this.filterForm = this.container.querySelector('.filter-widget__form');\n    this.filterText = this.container.querySelector('.filter-widget__text');\n\n    this.addToTasksList = this.addToTasksList.bind(this);\n    this.stopShowingError = this.stopShowingError.bind(this);\n    this.filter = this.filter.bind(this);\n\n    this.addEvents();\n  }\n\n  // Добавляем события\n  addEvents() {\n    this.filterForm.addEventListener('submit', this.addToTasksList);\n    this.filterText.addEventListener('keydown', this.stopShowingError);\n    this.filterText.addEventListener('input', this.filter);\n  }\n\n  // Добавляем задачу в список задач, если поле ввода не пусто и нажато enter\n  // Отрисовываем список задач и очищаем поле ввода\n  // Если поле ввода пустое, то просим написать задачу\n  addToTasksList(e) {\n    e.preventDefault();\n    const cleanInput = this.filterText.value.trim().toLowerCase();\n\n    if (!cleanInput) {\n      this.showError();\n      this.filterText.classList.add('filter-widget__text_red');\n      return;\n    }\n\n    this.addTask();\n    this.showList();\n    this.filterForm.reset();\n  }\n\n  // Отображаем ошибку, если поле ввода пустое\n  showError() {\n    this.errorText = document.createElement('p');\n    this.errorText.classList.add('filter-widget__error');\n    this.errorText.textContent = 'Please write your task';\n\n    this.container.append(this.errorText);\n  }\n\n  // Добавляем задачу в список задач в памяти\n  // Сохраняем задачи в локальное хранилище\n  addTask() {\n    const task = this.createTask();\n    tasks.push(task);\n\n    this.savedTasks.saveTasks(tasks);\n  }\n\n  // Создаем задачу с помощью объекта класса Task\n  createTask() {\n    const input = this.filterText.value;\n    const id = Math.floor(Math.random() * 1000000);\n    return new Task(id, input, false);\n  }\n\n  // Если пользователь продолжает ввод в инпуте, то перестаем отображать ошибку\n  stopShowingError(e) {\n    if (e.code === 'Space') return;\n\n    if (this.errorText) {\n      this.errorText.remove();\n      this.filterText.classList.remove('filter-widget__text_red');\n    }\n  }\n\n  // Фильтруем задачи по введеному тексту в поле ввода, обновляем список через 0.3 сек\n  filter(e) {\n    e.preventDefault();\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    const text = this.filterText.value;\n    this._timeout = setTimeout(() => this.filterTasks(text), 300);\n  }\n}\n","import tasks from './allTasks';\n\nexport default class TasksList {\n  constructor(container, savedTasks) {\n    if (typeof container === 'string') {\n      this.container = document.querySelector(container);\n    }\n    this.allTasks = this.container.querySelector('.tasks__list-all');\n    this.pinnedTasks = this.container.querySelector('.tasks__list_pinned');\n    this.savedTasks = savedTasks;\n\n    this.renderTasks = this.renderTasks.bind(this);\n    this.pinTask = this.pinTask.bind(this);\n    this.unpinTask = this.unpinTask.bind(this);\n    this.filterItemsByName = this.filterItemsByName.bind(this);\n\n    this.allTasks.addEventListener('click', this.pinTask);\n    this.pinnedTasks.addEventListener('click', this.unpinTask);\n  }\n\n  // Проверяем, есть ли сохраненные задачи в локальном хранилище\n  checkStorage() {\n    const savedAllTasks = this.savedTasks.load();\n\n    if (!savedAllTasks) return;\n\n    savedAllTasks.forEach((savedTask) => {\n      tasks.push(savedTask);\n    });\n\n    const pinnedTasks = tasks.filter((task) => task.pinned);\n\n    if (pinnedTasks.length > 0) {\n      pinnedTasks.forEach((pinnedTask) => {\n        this.addToPinnedList(pinnedTask);\n      });\n    } else {\n      this.showMessage('No pinned tasks.', this.pinnedTasks);\n    }\n\n    this.renderTasks();\n  }\n\n  // Показываем сообщение, что задач нет.\n  showMessage(text, tasksList) {\n    const message = document.createElement('p');\n    message.classList.add('item__message');\n    message.textContent = text;\n    tasksList.append(message);\n  }\n\n  // Создаем HTML-элемент задачи.\n  renderItem(item) {\n    return `\n      <li class=\"tasks__item item\" data-id=\"${item.id}\">\n        <div class=\"item__wrapper\">\n          <div class=\"item__name\">${item.name}</div>\n          <div class=\"item__circle ${item.pinned ? 'item__circle_pinned' : ''}\"></div>\n        </div>\n      </li>\n    `;\n  }\n\n  // Удаляем все задачи, и проверяем, есть ли сообщение об отсутствии задач.\n  // Если оно есть, то удаляем его.\n  clear() {\n    const noTasks = this.allTasks.querySelector('.item__message');\n    if (noTasks) {\n      noTasks.remove();\n    }\n\n    const items = this.allTasks.querySelectorAll('.item');\n    items.forEach((item) => item.remove());\n  }\n\n  // Отрисовываем все задачи, предварительно почистив контейнер\n  renderItems(items) {\n    this.clear();\n\n    items.forEach((item) => {\n      const itemHtml = this.renderItem(item);\n      this.allTasks.insertAdjacentHTML('beforeend', itemHtml);\n    });\n  }\n\n  // Фильтруем незакрепленные задачи и отрисовываем их\n  renderTasks() {\n    this.tasks = tasks.filter((task) => !task.pinned);\n    this.renderItems(this.tasks);\n  }\n\n  // Закрепляем задачу, и обновляем все задачи\n  pinTask(e) {\n    const target = e.target.closest('.item__circle');\n    if (!target) return;\n\n    const task = this.searchTask(target, true);\n\n    this.addToPinnedList(task);\n    this.renderTasks();\n  }\n\n  // Поиск задачи по id в списке задач, в памяти меняем состояние pinned\n  // Сохраняем задачи в локальное хранилище\n  searchTask(element, isPinned) {\n    const taskElement = element.closest('.item');\n    const taskId = taskElement.getAttribute('data-id');\n    const task = tasks.find((mission) => mission.id === +taskId);\n\n    task.pinned = isPinned;\n\n    this.savedTasks.saveTasks(tasks);\n\n    if (task.pinned) {\n      return task;\n    }\n\n    return taskElement;\n  }\n\n  // Отрисовываем задачу в закрепленных и убираем сообщение об\n  // отсутствии закрепленных задач, если оно есть\n  addToPinnedList(item) {\n    const noPinnedTasks = this.pinnedTasks.querySelector('.item__message');\n\n    if (noPinnedTasks) {\n      noPinnedTasks.remove();\n    }\n\n    const pinnedItem = this.renderItem(item);\n    this.pinnedTasks.insertAdjacentHTML('beforeend', pinnedItem);\n  }\n\n  // Открепляем задачу, удаляем задачу из закрепленных\n  // Если закрепленных больше нет, отображаем сообщение об этом\n  // Обновляем все задачи\n  unpinTask(e) {\n    const target = e.target.closest('.item__circle');\n    if (!target) return;\n\n    const taskEl = this.searchTask(target, false);\n\n    taskEl.remove();\n    const pinnedTasksElements = this.pinnedTasks.querySelectorAll('.item');\n\n    if (pinnedTasksElements.length === 0) {\n      this.showMessage('No pinned tasks.', this.pinnedTasks);\n    }\n\n    this.renderTasks();\n  }\n\n  // Фильтруем задачи в зависимости от поиска, если таких задач нет,\n  // то отображаем сообщение - 'задач не найдено'\n  filterItemsByName(text) {\n    this.tasks = tasks.filter((task) => !task.pinned);\n    const filteredTasks = this.tasks.filter((task) => {\n      const cleanText = text.trim().toLowerCase();\n      const taskName = task.name;\n      return taskName.toLowerCase().includes(cleanText);\n    });\n\n    if (filteredTasks.length === 0) {\n      this.clear();\n\n      this.showMessage('No tasks found.', this.allTasks);\n      return;\n    }\n\n    this.renderItems(filteredTasks);\n  }\n}\n","export default class SavedTasks {\n  constructor(storage) {\n    this.storage = storage;\n  }\n\n  // Сохраняем задачи в локальное хранилище\n  saveTasks(tasksList) {\n    this.storage.setItem('tasks', JSON.stringify(tasksList));\n  }\n\n  // Загружаем задачи из локального хранилища\n  load() {\n    return JSON.parse(this.storage.getItem('tasks'));\n  }\n}\n","import FilterWidget from './filterWidget';\nimport TasksList from './TasksList';\nimport SavedTasks from './savedTasks';\n\nconst savedTasks = new SavedTasks(localStorage);\n\nconst tasksList = new TasksList('.tasks', savedTasks);\ntasksList.checkStorage();\nconst filter = new FilterWidget('.filter-widget', savedTasks, tasksList.renderTasks, tasksList.filterItemsByName);\nconsole.log(filter);\n","import './css/app.css';\nimport './js/app';\n"],"names":["tasks","Task","constructor","id","name","pinned","FilterWidget","container","savedTasks","showList","filterTasks","document","querySelector","filterForm","filterText","addToTasksList","bind","stopShowingError","filter","addEvents","addEventListener","e","preventDefault","cleanInput","value","trim","toLowerCase","showError","classList","add","addTask","reset","errorText","createElement","textContent","append","task","createTask","push","saveTasks","input","Math","floor","random","code","remove","_timeout","clearTimeout","text","setTimeout","TasksList","allTasks","pinnedTasks","renderTasks","pinTask","unpinTask","filterItemsByName","checkStorage","savedAllTasks","load","forEach","savedTask","length","pinnedTask","addToPinnedList","showMessage","tasksList","message","renderItem","item","clear","noTasks","items","querySelectorAll","renderItems","itemHtml","insertAdjacentHTML","target","closest","searchTask","element","isPinned","taskElement","taskId","getAttribute","find","mission","noPinnedTasks","pinnedItem","taskEl","pinnedTasksElements","filteredTasks","cleanText","taskName","includes","SavedTasks","storage","setItem","JSON","stringify","parse","getItem","localStorage","console","log"],"sourceRoot":""}